// import java.util.HashSet;

// public class minMalwareSprea924 {
    
//     static int InfectedNbr = 0;
//     public int minMalwareSpread(int[][] graph, int[] infected) {
//         HashSet<Integer> setInfected = new HashSet<>();
//         for(int val: infected){
//             setInfected.add(val);
//         }
//         int ans = infected[0]; 
//         int sizeSaved=0;
//         for(int curr=0 ;curr<infected.length; curr++){
//             boolean[] visited = new boolean[graph.length];
//             // int temp = dfs(graph, visited, curr, curr, setInfected);
//             InfectedNbr=0;
//             int size = dfs2(graph, visited,infected[curr], setInfected);
//             if(InfectedNbr<2 && sizeSaved<size){
//                 ans=infected[curr];
//             }
//         }
//         return ans;
//     }
//     static int dfs2(int[][] graph, boolean[] visited, int curr, HashSet<Integer> setInfected){
            
//         visited[curr] = true;
//         int size=0;
//         for(int nbr=0; nbr<graph[curr].length; nbr++){
//             if(graph[curr][nbr]==1 && visited[nbr]==false){
//                 size+= dfs2(graph, visited, nbr, setInfected);
//             }   
//         }
//         if(setInfected.contains(curr)){
//             InfectedNbr++;
//         }
//         return size+1;
//     }




//     static int dfs(int[][] graph, boolean[] visited, int initialInfected, int curr, HashSet<Integer> setInfected){
//         if(visited[curr]){
//             return 0;
//         }
//         System.out.println(initialInfected +" "+curr);
//         if(curr!=initialInfected && setInfected.contains(curr)){
//             return Integer.MIN_VALUE;
//         }
//         visited[curr] = true;
//         int count=0;
//         for(int nbr=0; nbr<graph[curr].length; nbr++){
//             if(graph[curr][nbr]==1 && visited[nbr]==false){
//                 int val = 0;
//                 val = dfs(graph, visited, initialInfected, nbr, setInfected);
//                 if(val==Integer.MIN_VALUE){ return val;}
//                 count+= val;
//             }   
//         }
//         return count+1;
//     }

//     public static void main(String[] args) {
        
//     }
// }
